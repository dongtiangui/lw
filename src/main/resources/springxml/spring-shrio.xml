<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- 自定义realm -->
	<bean id="userDetailsService"
		class="com.lw.shiro.realm.UserDetailsService">
		<!-- 配置加密器 -->
		<property name="credentialsMatcher">
			<bean
				class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5"></property> <!-- 加密算法的名称 -->
				<property name="hashIterations" value="1024"></property> <!-- 配置加密的次数 -->
			</bean>
		</property>
	</bean>
	<bean id="securityManager"
		class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userDetailsService" />
		<property name="sessionManager" ref="sessionManager" />
		<!-- 记住我 -->
		
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- session的失效时长，单位毫秒 ，这里设置为10分钟 -->
		<property name="globalSessionTimeout" value="1000000" />
		<!-- 删除失效的session -->
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionListeners">
			<list>
				<bean class="com.lw.listener.ShiroSessionListener"></bean>
			</list>
		</property>
		<property name="sessionIdUrlRewritingEnabled" value="false"></property>
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<bean id="sessionIdCookie"
		class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name"
			value="tomcat.session.id" />
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor"
		class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 开启注解 -->

	<!-- 生成代理，通过代理进行控制 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<!-- 安全管理器 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- 异常处理（无权限） -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">
					redirect:/unauthorized.jsp
				</prop>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">
					redirect:/login.jsp
				</prop>
			</props>
		</property>
		<property name="defaultErrorView" value="/error.jsp" />
		<property name="exceptionAttribute" value="ex" />
	</bean>
	<bean id="shiroFilter"
		class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<property name="filters">
			<map>
				<entry key="kickout">
					<bean class="com.lw.filter.KickoutSessionControlFilter" />
				</entry>
			</map>
		</property>
		<!-- shiro过滤器的具体配置 -->
		<!-- anon-匿名访问，authc-需要认证 -->
		<property name="filterChainDefinitions">
			<value>
				/oauth/** = anon
				/druid/** = anon
				/tab/** = anon
				/static/** = anon
				/login/** = anon
				/index.jsp = anon
				/logout=logout
				/** = authc
			</value>
		</property>
	</bean>
</beans>
